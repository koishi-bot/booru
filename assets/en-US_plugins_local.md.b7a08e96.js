import{_ as e,t as a,v as o,S as l}from"./chunks/framework.dbf0e487.js";const f=JSON.parse('{"title":"koishi-plugin-booru-local","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/plugins/local.md"}'),i={name:"en-US/plugins/local.md"},c=l('<h1 id="koishi-plugin-booru-local" tabindex="-1">koishi-plugin-booru-local <a class="header-anchor" href="#koishi-plugin-booru-local" aria-label="Permalink to &quot;koishi-plugin-booru-local&quot;">​</a></h1><p>超快的本地图源支持</p><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-label="Permalink to &quot;Install&quot;">​</a></h2><ol><li>在 Koishi 中下载并安装本插件，若你还未安装 <a href="./../">Booru 插件</a>，请先安装。</li></ol><h2 id="配置项" tabindex="-1">配置项 <a class="header-anchor" href="#配置项" aria-label="Permalink to &quot;配置项&quot;">​</a></h2><h3 id="全局设置" tabindex="-1">全局设置 <a class="header-anchor" href="#全局设置" aria-label="Permalink to &quot;全局设置&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>此处的配置项可参考<a href="./../config.html#图源全局设置">图源全局设置</a></p></div><h3 id="图源设置" tabindex="-1">图源设置 <a class="header-anchor" href="#图源设置" aria-label="Permalink to &quot;图源设置&quot;">​</a></h3><br><h4 id="endpoint" tabindex="-1">endpoint <a class="header-anchor" href="#endpoint" aria-label="Permalink to &quot;endpoint&quot;">​</a></h4><ul><li>类型: <code>string[]</code></li></ul><p>图源文件夹，支持多个不同的文件夹</p><h4 id="storage" tabindex="-1">storage <a class="header-anchor" href="#storage" aria-label="Permalink to &quot;storage&quot;">​</a></h4><ul><li>类型: <code>ENUM</code></li><li>选项: <code>file | database</code></li><li>默认值: <code>file</code></li></ul><p>图源存数据存储方式，<code>file</code> 为文件存储，<code>database</code> 为数据库存储</p><h4 id="reload" tabindex="-1">reload <a class="header-anchor" href="#reload" aria-label="Permalink to &quot;reload&quot;">​</a></h4><ul><li>类型: <code>boolean</code></li><li>默认值: <code>false</code></li></ul><p>是否在每次启动时重新扫描图源文件夹</p><h4 id="languages" tabindex="-1">languages <a class="header-anchor" href="#languages" aria-label="Permalink to &quot;languages&quot;">​</a></h4><ul><li>类型: <code>string[]</code></li><li>默认值: <code>[&#39;zh-CN&#39;]</code></li></ul><p>图源支持的语言</p><h3 id="文件设置" tabindex="-1">文件设置 <a class="header-anchor" href="#文件设置" aria-label="Permalink to &quot;文件设置&quot;">​</a></h3><h4 id="scraper" tabindex="-1">scraper <a class="header-anchor" href="#scraper" aria-label="Permalink to &quot;scraper&quot;">​</a></h4><ul><li>类型: <code>string</code></li><li>默认值: <code>{filename}-{tag}</code></li></ul><p>文件元信息刮削器格式，详见 <a href="#刮削器">刮削器</a></p><h4 id="extension" tabindex="-1">extension <a class="header-anchor" href="#extension" aria-label="Permalink to &quot;extension&quot;">​</a></h4><ul><li>类型: <code>string[]</code></li><li>默认值: <code>[&#39;.jpg&#39;, &#39;.png&#39;, &#39;.jpeg&#39;, &#39;.gif&#39;]</code></li></ul><p>支持的图片扩展名，请注意扩展名前的 <code>.</code> 是必须的</p><h2 id="刮削器" tabindex="-1">刮削器 <a class="header-anchor" href="#刮削器" aria-label="Permalink to &quot;刮削器&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>该方式需要图片文件名是特定的格式，且为减少边界情况，仅支持使用 <code>-</code> 分割</p></div><p>这是一个在文件名中指定该图片元信息的方式，以便于插件能够正确的搜索符合需求的图片。</p><h3 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h3><p>插件设置中 <code>scraper</code> 默认值可得出大致的使用方式：当 <code>scraper</code> 为 <code>{filename}-{tag}</code> 时，文件名为 <code>foo-[bar].jpg</code> 的图片将被刮削为 <code>{name: &#39;foo&#39;, tag: [&#39;bar&#39;]， ...}</code>。</p><p>即：文件名为 <code>foo</code> 的图片，其拥有 <code>bar</code> 这个 tags。</p><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h3><h4 id="" tabindex="-1"><code>#...#</code> <a class="header-anchor" href="#" aria-label="Permalink to &quot;`#...#`&quot;">​</a></h4><ul><li>类型: <code>string</code></li><li>默认值: <code>name</code></li><li>示例: <code>#name#{fliename}-{tag}</code></li></ul><blockquote><p>该语法仅在 <code>scraper</code> 的第一个元素中有效，否则将被忽略</p></blockquote><p>指定刮削器的工作方式，目前支持以下几种方式：</p><ol><li><code>name</code>: 文件名模式</li><li><code>meta</code>: 文件元信息模式（开发中）</li></ol><h4 id="filename" tabindex="-1"><code>{filename}</code> <a class="header-anchor" href="#filename" aria-label="Permalink to &quot;`{filename}`&quot;">​</a></h4><ul><li>类型: <code>string</code></li></ul><blockquote><p>当 <code>{filename}</code> 被放置在最后时，<code>+</code> 将失效（e.g. <code>{foo}-{filename}+</code>）</p></blockquote><p>指示文件名所在的位置，文件名将被刮削为 <code>name</code>，并作为图片的 <code>name</code> 属性</p><h4 id="tag" tabindex="-1"><code>{tag}</code> <a class="header-anchor" href="#tag" aria-label="Permalink to &quot;`{tag}`&quot;">​</a></h4><ul><li>类型: <code>string[]</code></li></ul><p>指示标签所在的位置，标签将被刮削为 <code>tag</code>，并作为图片的 <code>tags</code> 属性</p><h4 id="nsfw-wip" tabindex="-1"><code>{nsfw}</code>（WIP） <a class="header-anchor" href="#nsfw-wip" aria-label="Permalink to &quot;`{nsfw}`（WIP）&quot;">​</a></h4><ul><li>类型: <code>boolean | &#39;furry&#39; | &#39;guro&#39; | &#39;shota&#39; | &#39;bl&#39;</code></li><li>默认值: <code>nsfw=false</code></li></ul><p>指示图片是否为 nsfw，若为 <code>boolean</code> 类型，则直接将其作为 <code>nsfw</code> 属性，若为 <code>string</code> 类型，则将其作为 <code>nsfw</code> 属性的值</p><h4 id="-1" tabindex="-1"><code>+</code> <a class="header-anchor" href="#-1" aria-label="Permalink to &quot;`+`&quot;">​</a></h4><p>忽略后续的内容不作为元信息处理</p><h4 id="-2" tabindex="-1"><code>.</code> <a class="header-anchor" href="#-2" aria-label="Permalink to &quot;`.`&quot;">​</a></h4><p>匹配 <code>.</code> 开头的隐藏文件，不设置的情况下将忽略隐藏文件</p>',54),d=[c];function r(t,n,s,h,u,p){return a(),o("div",null,d)}const g=e(i,[["render",r]]);export{f as __pageData,g as default};
