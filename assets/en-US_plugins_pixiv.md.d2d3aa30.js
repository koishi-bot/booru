import{_ as e,t as i,v as a,S as o}from"./chunks/framework.dbf0e487.js";const x=JSON.parse('{"title":"koishi-plugin-booru-pixiv","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/plugins/pixiv.md"}'),r={name:"en-US/plugins/pixiv.md"},t=o('<h1 id="koishi-plugin-booru-pixiv" tabindex="-1">koishi-plugin-booru-pixiv <a class="header-anchor" href="#koishi-plugin-booru-pixiv" aria-label="Permalink to &quot;koishi-plugin-booru-pixiv&quot;">​</a></h1><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-label="Permalink to &quot;Install&quot;">​</a></h2><ol><li>在 Koishi 中下载并安装本插件，若你还未安装 <a href="./../">Booru 插件</a>，请先安装。</li><li>在 <a href="https://www.pixiv.net/" target="_blank" rel="noreferrer">Pixiv</a> 注册账号并登录。</li><li>安装 <a href="https://www.npmjs.com/package/koishi-plugin-pixiv-auth" target="_blank" rel="noreferrer">pixiv-auth</a> 插件，根据其配置页面获取 <code>Refresh Token</code>，注意此插件需求图形界面。 <ul><li>如果你没有图形界面，也可以使用 <a href="https://gist.github.com/ZipFile/c9ebedb224406f4f11845ab700124362" target="_blank" rel="noreferrer">Pixiv OAuth Script</a> 脚本获取 <code>Refresh Token</code>。</li></ul></li><li>将 <code>Refresh Token</code> 填入配置项中的 <code>token</code> 项。</li></ol><h2 id="配置项" tabindex="-1">配置项 <a class="header-anchor" href="#配置项" aria-label="Permalink to &quot;配置项&quot;">​</a></h2><h3 id="全局设置" tabindex="-1">全局设置 <a class="header-anchor" href="#全局设置" aria-label="Permalink to &quot;全局设置&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>此处的配置项可参考<a href="./../config.html#图源全局设置">图源全局设置</a></p></div><h3 id="搜索设置" tabindex="-1">搜索设置 <a class="header-anchor" href="#搜索设置" aria-label="Permalink to &quot;搜索设置&quot;">​</a></h3><br><h4 id="token" tabindex="-1">token <a class="header-anchor" href="#token" aria-label="Permalink to &quot;token&quot;">​</a></h4><ul><li>类型：<code>string</code></li><li>是否必填：是</li></ul><p>Pixiv APP API 的 <code>Refresh Token</code>。</p><h4 id="minbookmarks" tabindex="-1">minBookmarks <a class="header-anchor" href="#minbookmarks" aria-label="Permalink to &quot;minBookmarks&quot;">​</a></h4><ul><li>类型: <code>number</code></li><li>默认值: <code>0</code></li></ul><p>最少收藏数</p><h4 id="bypassmethod" tabindex="-1">bypassMethod <a class="header-anchor" href="#bypassmethod" aria-label="Permalink to &quot;bypassMethod&quot;">​</a></h4><ul><li>类型: <code>&#39;proxy&#39; | &#39;route&#39; | &#39;asset&#39;</code></li></ul><p>突破 Pixiv 站点图片防外部引用检测的方式。具体<a href="#突破-pixiv-检测">见下方说明</a></p><h4 id="proxy" tabindex="-1">proxy <a class="header-anchor" href="#proxy" aria-label="Permalink to &quot;proxy&quot;">​</a></h4><ul><li>类型: <code>{ endpoint: string } | string</code></li><li>可选值: <code>&#39;i.pixiv.re&#39; | &#39;i.pixiv.cat&#39;</code></li><li>默认值: <code>&#39;i.pixiv.re&#39;</code></li></ul><p>使用代理突破检测时的代理服务。如果是自定义代理服务，可以填写代理服务的地址。</p><h4 id="route" tabindex="-1">route <a class="header-anchor" href="#route" aria-label="Permalink to &quot;route&quot;">​</a></h4><ul><li>类型: <code>string</code></li><li>默认值: <code>&#39;/booru/pixiv/proxy&#39;</code></li></ul><p>使用 route 突破检测时的代理服务路径。</p><h4 id="aeskey" tabindex="-1">aesKey <a class="header-anchor" href="#aeskey" aria-label="Permalink to &quot;aesKey&quot;">​</a></h4><ul><li>类型: <code>string</code></li><li>默认值: <code>&#39;&#39;</code></li></ul><p>使用 route 突破检测时的 AES 加密密钥。</p><h2 id="bypass-pixiv-detection" tabindex="-1">突破 Pixiv 检测 <a class="header-anchor" href="#bypass-pixiv-detection" aria-label="Permalink to &quot;突破 Pixiv 检测 {#bypass-pixiv-detection}&quot;">​</a></h2><p>Pixiv 站点全站引入了图片防外部引用检测，主要是检测 HTTP 请求的 Referer 头。这个检测会阻止插件直接引用图片链接，导致部分适配器无法直接发送图片链接。为了解决这个问题，本插件提供了三种突破检测的方式。</p><h3 id="proxy-1" tabindex="-1">proxy <a class="header-anchor" href="#proxy-1" aria-label="Permalink to &quot;proxy&quot;">​</a></h3><p>使用 Pixiv 的图片代理服务，将图片链接转换为代理链接。这通常使用公开的代理服务，如 <a href="https://pixiv.cat" target="_blank" rel="noreferrer">pixiv.cat</a> 等。</p><h3 id="route-1" tabindex="-1">route <a class="header-anchor" href="#route-1" aria-label="Permalink to &quot;route&quot;">​</a></h3><p>使用插件本身提供的图片代理服务，将图片链接转换到 Koishi 所在的服务器上。这通常需要插件的服务器能够访问到 Pixiv 的图片链接。</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>同时由于插件难以对访问来源进行可信检测，因此需要使用 AES 加密密钥对图片链接进行加密，以防止恶意访问。密钥无法在配置中设置，在插件第一次启动时会自动生成一个随机的密钥。访问此路径时，只允许成功解密的请求通过，理论上只可能是插件本身提供的链接。</p></div>',33),l=[t];function s(n,h,c,d,p,u){return i(),a("div",null,l)}const k=e(r,[["render",s]]);export{x as __pageData,k as default};
